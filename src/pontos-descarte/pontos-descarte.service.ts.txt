import { Injectable, NotFoundException } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { PontoDescarte, PontoDescarteDocument } from './schemas/ponto-descarte.schema';

@Injectable()
export class PontosDescarteService {
  constructor(
    @InjectModel(PontoDescarte.name) private pontoDescarteModel: Model<PontoDescarteDocument>,
  ) {}

  async criar(pontoDescarte: PontoDescarte): Promise<PontoDescarte> {
    const criado = new this.pontoDescarteModel(pontoDescarte);
    return criado.save();
  }

  async listarTodos(): Promise<PontoDescarte[]> {
    return this.pontoDescarteModel.find().exec();
  }

  async buscarPorId(id: string): Promise<PontoDescarte> {
    const ponto = await this.pontoDescarteModel.findById(id).exec();
    if (!ponto) {
      throw new NotFoundException('Ponto de descarte não encontrado');
    }
    return ponto;
  }

  async remover(id: string): Promise<void> {
    const resultado = await this.pontoDescarteModel.deleteOne({ _id: id }).exec();
    if (resultado.deletedCount === 0) {
      throw new NotFoundException('Ponto de descarte não encontrado');
    }
  }

  async contarTotal(): Promise<number> {
    return this.pontoDescarteModel.countDocuments().exec();
  }
}